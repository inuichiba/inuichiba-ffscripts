name: Weekly Supabase Ping

on:
  schedule:
    - cron: '0 0 1,5,10,15,20,25,30 * *'
  workflow_dispatch:

jobs:
  ping-supabase:
    runs-on: ubuntu-latest
    env:
      SUPABASE_PROJECT_URL: ${{ secrets.SUPABASE_PROJECT_URL }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      NOTIFY_WEBHOOK_URL: ${{ secrets.WORKERS_NOTIFY_URL }}  # Cloudflare対応用に名前汎用化

    steps:
      - name: 🔁 Ping Supabase tables
        run: |
          set -x
          echo "🔁 Supabase 複数テーブルの ping を開始します...($(date '+%Y-%m-%d %H:%M:%S'))"

          now=$(TZ=Asia/Tokyo date "+%Y-%m-%d %H:%M:%S")

          failures=""
          for table in users_ffprod users_ffdev users_prod; do
            echo ""
            echo "🔸 $table を ping 中..."

            status=$(curl -L -s -o /dev/null -w "%{http_code}" \
              -H "apikey: $SUPABASE_ANON_KEY" \
              "$SUPABASE_PROJECT_URL/rest/v1/$table")

            echo "✅ [$table] → ステータスコード: $status"

            if [ "$status" != "200" ]; then
              echo "⚠️ [$table] はステータス200ではありません！"
              failures="${failures}- ${table} → $status\\n"
            fi
          done


          # 失敗があったら通知してexit 1(異常終了→GitHubが自動でメール通知)
          [ -n "$failures" ] && {
            now=$(TZ=Asia/Tokyo date "+%Y-%m-%d %H:%M:%S")
            payload="⚠️ Supabase ping失敗（$now JST）\\n$failures"
            curl -s -X POST -H "Content-Type: application/json" \
                 -d "{\"content\":\"$payload\"}" \
                 "$NOTIFY_WEBHOOK_URL"
            exit 1
          }
          
          echo "✅ すべてのテーブルに正常にアクセスできました。"
          exit 0