name: Weekly Supabase's user-tables Ping
# エラーがあったときだけGitHubからメール通知があるとともにDiscordに通知されます。
# ✅ 通知先はDiscordに変更済（直接送信）
# GitHub Secrets: DISCORD_WEBHOOK_URL を使用
# Cloudflare Workers経由の通知は廃止し、無料枠のリクエスト消費を完全にゼロに抑えています。
# Cloudflare Workers経由に戻すなら、secrets：WORKERS_NOTIFY_URL にすればいいです(ただし課金枠に入ります)。

on:
  schedule:
    - cron: '0 3 1,5,10,15,20,25,30 * *'  # JST12:00（UTC+9）= UTC3:00
  workflow_dispatch:                      # 手動実行も可

jobs:
  ping-supabase:
    runs-on: ubuntu-latest
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}  # Cloudflare対応はWORKERS_NOTIFY_URL

    steps:
      - name: 🔁 Ping Supabase tables
        run: |
          set -x
          echo "🔁 Supabase 複数テーブルの ping を開始します...($(date '+%Y-%m-%d %H:%M:%S'))"

          now=$(TZ=Asia/Tokyo date "+%Y-%m-%d %H:%M:%S")

          failures=""
          for table in users_ffprod users_ffprod_archived users_ffdev users_prod; do
            echo ""
            echo "🔸 $table を ping 中..."

            status=$(curl -L -s -o /dev/null -w "%{http_code}" \
              -H "apikey: $SUPABASE_KEY" \
              "$SUPABASE_URL/rest/v1/$table")

            echo "✅ [$table] → ステータスコード: $status"

            if [ "$status" != "200" ]; then
              echo "⚠️ [$table] はステータス200ではありません！"
              failures="${failures}- ${table} → $status\\n"
            fi
          done


          # 失敗があったら通知してexit 1(異常終了→GitHubが自動でメール通知)
          [ -n "$failures" ] && {
            now=$(TZ=Asia/Tokyo date "+%Y-%m-%d %H:%M:%S")
            payload="⚠️ Supabase ping失敗（$now JST）\\n$failures"
            curl -s -X POST -H "Content-Type: application/json" \
                 -d "{\"content\":\"$payload\"}" \
                 "$DISCORD_WEBHOOK_URL"
            exit 1
          }

          echo "✅ すべてのテーブルに正常にアクセスできました。"
          exit 0
